Given /^a range from "(.*?)" to "(.*?)"$/ do |start, stop|
  #pending # express the regexp above with the code you wish you had
  @range = (start.to_i..stop.to_i)
end

Then /^I want to build its index$/ do
  @gtf.build_idx.should == {:transcripts=>[801, 604, 425, 425, 857, 610, 610, 607, 607, 616, 622, 809, 1003, 821, 429, 412, 1023, 610, 607, 1003, 616, 607, 404,
    404, 2973, 3219, 3420, 3219, 813, 1213, 1213, 1231, 613, 408, 408, 814, 1014, 626, 814, 408, 436, 610, 662, 1016, 816, 613, 2227, 616, 616, 616, 420, 643, 7588,
     813, 814, 1014, 814, 614, 614, 3018, 2013, 814, 613, 865, 433, 433, 433, 643, 619, 3454, 3454, 2043, 1237, 628, 1225, 1023, 1243, 1023, 1225, 410, 410, 1662, 
     1238, 1004, 1023, 2642, 2237, 2439, 2033, 2439, 2236, 834, 2280, 2642, 821, 1832, 2236, 2439, 2236, 2439, 2033, 1629, 1225, 1427, 1225, 1225, 821, 1427, 412,
      412, 611, 412, 412, 412, 414, 1678, 1629, 1630, 822, 620, 1225, 1267, 821, 426, 821, 626, 1831, 821, 629, 412, 418, 1831, 1629, 1670, 1427, 1694, 1427, 1831,
       1630, 1831, 620, 1629, 1629, 1225, 1023, 1427, 1427, 1427, 822, 1225, 1225, 822, 620, 818, 817, 617, 4063, 3860, 3657, 3300, 1023],
       :names=>{"ENST00000417324"=>1, "ENST00000461467"=>2, "ENST00000492842"=>3, "ENST00000335137"=>4, "ENST00000417636"=>5, "ENST00000423796"=>6, "ENST00000450696"=>7, "TCONS_00000124"=>8, "TCONS_00000125"=>9, "TCONS_00000796"=>10, "TCONS_00001368"=>11, "ENST00000446136"=>12, "TCONS_00000444"=>13, "ENST00000427857"=>14, "ENST00000408219"=>15, "ENST00000415481"=>16, "ENST00000417705"=>17, "ENST00000432961"=>18, "TCONS_00002277"=>19, "TCONS_00000073"=>20, "TCONS_00000032"=>21, "TCONS_00000134"=>22, "CUFF.8.1"=>23, "CUFF.9.1"=>24, "CUFF.10.1"=>25, "ENST00000379407"=>26, "ENST00000379410"=>27, "ENST00000379409"=>28, "ENST00000480267"=>29, "ENST00000491024"=>30, "ENST00000433179"=>31, "ENST00000341290"=>32, "ENST00000479361"=>33, "CUFF.12.1"=>34, "CUFF.13.1"=>35, "ENST00000428771"=>36, "ENST00000304952"=>37, "ENST00000481869"=>38, "ENST00000484667"=>39, "CUFF.14.5"=>40, "ENST00000423619"=>41, "TCONS_00000447"=>42, "ENST00000379389"=>43, "ENST00000427998"=>44, "ENST00000394517"=>45, "ENST00000442292"=>46, "ENST00000412397"=>47, "ENST00000456409"=>48, "ENST00000433695"=>49, "ENST00000451054"=>50, "CUFF.16.8"=>51, "ENST00000453464"=>52, "ENST00000379370"=>53, "ENST00000477585"=>54, "ENST00000469403"=>55, "ENST00000479707"=>56, "ENST00000466223"=>57, "ENST00000478677"=>58, "ENST00000492947"=>59, "ENST00000379364"=>60, "ENST00000419249"=>61, "ENST00000461111"=>62, "ENST00000418300"=>63, "ENST00000416774"=>64, "ENST00000384997"=>65, "ENST00000384875"=>66, "ENST00000362106"=>67, "ENST00000379317"=>68, "ENST00000506177"=>69, "ENST00000379290"=>70, "ENST00000379289"=>71, "ENST00000379288"=>72, "ENST00000460998"=>73, "ENST00000514695"=>74, "ENST00000486379"=>75, "ENST00000328596"=>76, "ENST00000379268"=>77, "ENST00000486728"=>78, "ENST00000379265"=>79, "CUFF.19.5"=>80, "CUFF.19.6"=>81, "ENST00000379236"=>82, "ENST00000497869"=>83, "CUFF.20.3"=>84, "ENST00000453580"=>85, "ENST00000379339"=>86, "ENST00000294576"=>87, "ENST00000448924"=>88, "ENST00000465822"=>89, "ENST00000379325"=>90, "ENST00000421241"=>91, "ENST00000487177"=>92, "ENST00000477196"=>93, "ENST00000467751"=>94, "ENST00000464905"=>95, "ENST00000379320"=>96, "ENST00000379319"=>97, "ENST00000434641"=>98, "ENST00000482816"=>99, "ENST00000457999"=>100, "ENST00000437760"=>101, "ENST00000462097"=>102, "ENST00000473600"=>103, "ENST00000475119"=>104, "ENST00000442117"=>105, "ENST00000427787"=>106, "ENST00000472741"=>107, "ENST00000480643"=>108, "CUFF.27.1"=>109, "CUFF.28.1"=>110, "CUFF.30.1"=>111, "CUFF.31.1"=>112, "CUFF.32.1"=>113, "CUFF.33.1"=>114, "CUFF.21.1"=>115, "ENST00000360001"=>116, "ENST00000465727"=>117, "ENST00000263741"=>118, "ENST00000494748"=>119, "ENST00000478938"=>120, "ENST00000403997"=>121, "ENST00000545427"=>122, "ENST00000459994"=>123, "ENST00000379198"=>124, "ENST00000462849"=>125, "ENST00000478606"=>126, "ENST00000330388"=>127, "ENST00000468365"=>128, "ENST00000486627"=>129, "CUFF.25.1"=>130, "ENST00000565563"=>131, "ENST00000450390"=>132, "ENST00000347370"=>133, "ENST00000349431"=>134, "ENST00000339385"=>135, "ENST00000348298"=>136, "ENST00000400929"=>137, "ENST00000464036"=>138, "ENST00000360466"=>139, "ENST00000400930"=>140, "ENST00000467339"=>141, "ENST00000473215"=>142, "ENST00000435198"=>143, "ENST00000509720"=>144, "ENST00000491779"=>145, "ENST00000466752"=>146, "ENST00000503294"=>147, "ENST00000477894"=>148, "ENST00000471154"=>149, "ENST00000422076"=>150, "ENST00000502382"=>151, "ENST00000461142"=>152, "ENST00000488418"=>153, "TCONS_00000799"=>154, "TCONS_00000135"=>155, "TCONS_00000136"=>156, "ENST00000379110"=>157, "ENST00000379116"=>158, "ENST00000379101"=>159, "ENST00000338555"=>160, "ENST00000470022"=>161},
        :exons=>[]}
end

Then /^save it as "(.*?)"$/ do |gtf_index_filename|
  @gtf_fn_idx = File.absolute_path File.join("spec/fixture/","#{gtf_index_filename}")
  @gtf.dump_idx
  File.exists?(@gtf_fn_idx).should == true
end

Then /^I want to extract feature number "(.*?)"$/ do |index_to_get|
	tow = <<DATA
1	Cufflinks	transcript	35245	36073	1	-	.	gene_id "CUFF.1"; transcript_id "ENST00000461467"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000"; full_read_support "no";
1	Cufflinks	exon	35245	35481	1	-	.	gene_id "CUFF.1"; transcript_id "ENST00000461467"; exon_number "1"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000";
1	Cufflinks	exon	35721	36073	1	-	.	gene_id "CUFF.1"; transcript_id "ENST00000461467"; exon_number "2"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000";
DATA

	five = <<DATA
1	Cufflinks	transcript	521369	523833	1000	-	.	gene_id "ENSG00000231709"; transcript_id "ENST00000417636"; FPKM "0.0050659782"; frac "1.000000"; conf_lo "0.000000"; conf_hi "0.116517"; cov "0.009533"; full_read_support "no";
1	Cufflinks	exon	521369	521738	1000	-	.	gene_id "ENSG00000231709"; transcript_id "ENST00000417636"; exon_number "1"; FPKM "0.0050659782"; frac "1.000000"; conf_lo "0.000000"; conf_hi "0.116517"; cov "0.009533";
1	Cufflinks	exon	522201	522335	1000	-	.	gene_id "ENSG00000231709"; transcript_id "ENST00000417636"; exon_number "2"; FPKM "0.0050659782"; frac "1.000000"; conf_lo "0.000000"; conf_hi "0.116517"; cov "0.009533";
1	Cufflinks	exon	523497	523833	1000	-	.	gene_id "ENSG00000231709"; transcript_id "ENST00000417636"; exon_number "3"; FPKM "0.0050659782"; frac "1.000000"; conf_lo "0.000000"; conf_hi "0.116517"; cov "0.009533";
DATA

    fifteen = <<DATA
1	Cufflinks	transcript	808847	808957	1	-	.	gene_id "ENSG00000221146"; transcript_id "ENST00000408219"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000"; full_read_support "no";
1	Cufflinks	exon	808847	808957	1	-	.	gene_id "ENSG00000221146"; transcript_id "ENST00000408219"; exon_number "1"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000";
DATA

	pre_defined_transcripts={"2"=>tow,"5"=>five, "15"=> fifteen}
  @gtf[index_to_get.to_i].to_s.tr('"','\"').should == pre_defined_transcripts[index_to_get]
end

Then /^I want to obtain a bed file for each position in the range$/ do
	str = @range.map do |index|
		capture(:stdout) do 
			Thor::Runner.start (["filter:cufflinks:tra_at_idx",@gtf_fn_ap,index])
		end
	end
	str.each do |file|
		FileUtils.rm(file.chop)
	end
  str.should == ["CUFF.1-ENST00000461467.bed\n", "ENSG00000240361-ENST00000492842.bed\n",
                 "ENSG00000186092-ENST00000335137.bed\n", "ENSG00000231709-ENST00000417636.bed\n",
                 "CUFF.2-ENST00000423796.bed\n", "CUFF.2-ENST00000450696.bed\n",
                 "CUFF.2-TCONS_00000124.bed\n", "CUFF.2-TCONS_00000125.bed\n",
                 "CUFF.3-TCONS_00000796.bed\n", "XLOC_000669-TCONS_00001368.bed\n"]
  end


Then /^I want to extract feature named "(.*?)"$/ do |transcript_name|
    enst00000408219 = <<DATA
1	Cufflinks	transcript	808847	808957	1	-	.	gene_id "ENSG00000221146"; transcript_id "ENST00000408219"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000"; full_read_support "no";
1	Cufflinks	exon	808847	808957	1	-	.	gene_id "ENSG00000221146"; transcript_id "ENST00000408219"; exon_number "1"; FPKM "0.0000000000"; frac "0.000000"; conf_lo "0.000000"; conf_hi "0.000000"; cov "0.000000";
DATA

  @gtf[transcript_name].to_s.should == enst00000408219
end
